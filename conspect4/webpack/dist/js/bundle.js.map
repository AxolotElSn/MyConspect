{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;;;;;;;UCdA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;ACtBA;AACA,iBAAiB,mBAAO,CAAC,gCAAQ,GAAG;AACpC;AACA;AACA;AACA,0BAA0B;AAC1B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///./src/js/main.js","webpack:///webpack/bootstrap","webpack:///./src/js/script.js"],"sourcesContent":["// Нужно сделать так чтоб этой ф-ией можно было пользоваться из другого файла\r\n\r\nfunction myModule() {\r\n    this.hello = function() {\r\n        console.log('hello');\r\n    };\r\n\r\n    this.goodbye = function() {\r\n        console.log('bye!'); \r\n    };\r\n}\r\n\r\nmodule.exports = myModule; // module - это такой объект, exports - свойство. Туда помещаем то, что хотим экспортировать\r\n\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// require — это функция, которая используется для импорта модулей, файлов или библиотек в текущий файл. С ее помощью можно подключать внешние модули и использовать их в коде.\r\nconst myModule = require('./main'); // .js писать не надо. При сборке сборщик поймет сам \r\n\r\nconst myModuleInstance = new myModule();\r\n\r\nmyModuleInstance.hello(); // hello\r\nmyModuleInstance.goodbye(); // bye!\r\n\r\n// Важно! Браузер не умеет самостоятельно собирать модули. По этому нам нужен сборщик\r\n// npm install webpack webpack-cli --save-dev \r\n\r\n// Если использовать стандартные напстройки webpack, то нужно соблюдать некоторые устовия. Главный файл который принемает в себя все импорты должен называться index.js и находиться в папке src. То есть нельзя чтоб этот файл распологался например src/js/index.js будет ошибка. При успехе у нас появляется папка dist в которой появляется файл main.js. Там сформируется определенная модульная структура. То есть там те самые наши анонимные самовызывающиеся ф-ии. Короче это наши все файлы в одном\r\n\r\n// Но в реальных проектах мы пользуемся конфигами. Тут мы можем настроить нашу индивидуальную сборку\r\n"],"names":[],"sourceRoot":""}