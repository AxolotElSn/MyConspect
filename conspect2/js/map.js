'use strict';

const user = {
    name: 'Alex',
    surname: 'Orlov',
    showMyPublicData: function() {
        console.log(`${this.name} ${this.surname}`);
    }
}

const shops = [
    {rice: 500},
    {oil: 200},
    {bread: 50}
];

const budget = [5000, 15000, 25000];

const map = new Map([
    [{paper: 400}, 8000]
]);

shops.forEach((shop, i) => {
    map.set(shop, budget[i]); // set позволяет сопоставить значения shop и budget друг с другом
})

console.log(map); // карты внутри это не объект с объектами, а массив массивов, это важно


// короче это просто удобная штука позволяющая использовать объекты как свойства других объектов


// console.log(map.get(shops[0])); // ну а get позволяет получить значение
// console.log(map.has(shops[0])); // позволяет узнать скществует ли объект внутри карты

// map.delete(key);
// map.clear();
// map.size;

// так работает forEach, на всякий случай: forEach проходит по каждому элементу массива и применяет callback функцию к каждому элементу. Ф-ия может в себя принимать 3 аргумента: 1) тот элемент который мы перебтраем на данный момент (назвать можно как угодно. В моем случае item). 2) номер по порядку, индекс элемента, проще говоря. 3) ссылка на массив который перебираем

// map.set(shops[0], 5000) // map это по сути тот же объект, но ключами могут быть и другие объекты и ф-ии и массивы и что угодно
//     .set(shops[1], 15000)
//     .set(shops[2], 25000);


// console.log(map);
